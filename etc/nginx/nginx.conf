user www-data;
worker_processes auto;
pid /run/nginx.pid;
error_log /var/log/nginx/error.log;
include /etc/nginx/modules-enabled/*.conf;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

events {
	# determines how much clients will be served per worker
	# max clients = worker_connections * worker_processes
	# max clients is also limited by the number of socket connections available on the system (~64k)
	worker_connections 4000;

	# optimized to serve many clients with each thread, essential for linux
	use epoll;

	# accept as many connections as possible, may flood worker connections if set too low
	multi_accept on;
}

http {
	map $remote_addr $ip_anonym1 {
		default 0.0.0;
		"~(?P<ip>(\d+)\.(\d+)\.(\d+))\.\d+" $ip;
		"~(?P<ip>[^:]+:[^:]+):" $ip;
	}

	map $remote_addr $ip_anonym2 {
		default .0;
		"~(?P<ip>(\d+)\.(\d+)\.(\d+))\.\d+" .0;
		"~(?P<ip>[^:]+:[^:]+):" ::;
	}

	map $ip_anonym1$ip_anonym2 $ip_anonymized {
		default 0.0.0.0;
		"~(?P<ip>.*)" $ip;
	}

	log_format anonymized '$ip_anonymized - $remote_user [$time_local] '
		'"$request" $status $body_bytes_sent '
		'"$http_referer" "$http_user_agent"';

	upstream php-handler {
		# server 127.0.0.1:9000;
		server unix:/var/run/php/php8.4-fpm.sock;
	}

	## Detect when HTTPS is used
	map $scheme $fastcgi_https {
		default off;
		https on;
	}

	# Helper variable for proxying websockets.
	map $http_upgrade $connection_upgrade {
		default upgrade;
		'' close;
	}

	##
	# Basic Settings
	##

	# cache informations about FDs, frequently accessed files
	# can boost performance, but you need to test those values
	open_file_cache max=200000 inactive=20s;
	open_file_cache_valid 30s;
	open_file_cache_min_uses 2;
	open_file_cache_errors on;

	# copies data between one FD and other from within the kernel
	# faster than read() + write()
	sendfile on;

	# send headers in one piece, it is better than sending them one by one
	tcp_nopush on;

	# don't buffer data sent, good for small data bursts in real time
	tcp_nodelay on;

	types_hash_max_size 2048;
	server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# SSL Settings
	##

	include /etc/nginx/ssl_params.conf;

	##
	# Logging Settings
	##

	# to boost I/O on HDD we can disable access logs
	# access_log off;
	access_log /var/log/nginx/access.log;

	##
	# Gzip Settings
	##

	gzip on;
	# gzip_static on;
	gzip_min_length 10240;
	gzip_comp_level 1;
	gzip_vary on;
	gzip_disable msie6;
	gzip_proxied expired no-cache no-store private auth;
	gzip_types
			# text/html is always compressed by HttpGzipModule
			application/atom+xml
			application/javascript
			application/json
			application/rss+xml
			application/vnd.ms-fontobject
			application/x-javascript
			application/xml
			font/opentype
			font/truetype
			image/svg+xml
			text/css
			text/javascript
			text/plain
			text/x-component
			text/xml;

	# allow the server to close connection on non responding client, this will free up memory
	reset_timedout_connection on;

	# request timed out -- default 60
	client_body_timeout 10;

	# if client stop responding, free up memory -- default 60
	send_timeout 2;

	# server will close connection after this time -- default 75
	keepalive_timeout 30;

	##
	# Virtual Host Configs
	##

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
}
