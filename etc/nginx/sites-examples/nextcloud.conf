server {
	listen 80;
	# listen 443 ssl http2;
	# listen [::]:443 ssl http2;

	server_name servername.com;
	root /var/www/servername.com/;

	# Force www->none redirect.
	if ($http_host ~* "^(.+)\.servername\.com$") {
		rewrite ^ $scheme://servername.com$request_uri? permanent;
	}
	# Force redirect to SSL.
	# if ($scheme != "https") {
	# 	rewrite ^ https://$http_host$request_uri? permanent;
	# }

	# include ssl_params.conf;

	# ssl_certificate /etc/letsencrypt/live/servername.com/fullchain.pem;
	# ssl_certificate_key /etc/letsencrypt/live/servername.com/privkey.pem;

	disable_symlinks if_not_owner from=$document_root;

	# Add headers to serve security related headers
	# Before enabling Strict-Transport-Security headers please read into this topic first.
	#
	# WARNING: Only use the "preload option once you read about the consequences
	# in https://hstspreload.org/. This option will add the domain to a hardcoded
	# list that is shipped in all major browsers and getting removed from this
	# list could take several months.
	# add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
	# add_header Strict-Transport-Security "max-age=15552000; includeSubdomains";
	add_header X-Content-Type-Options nosniff;
	add_header X-XSS-Protection "1; mode=block";
	add_header X-Robots-Tag none;
	add_header X-Download-Options noopen;
	add_header X-Permitted-Cross-Domain-Policies none;
	add_header Referrer-Policy no-referrer;
	add_header X-Frame-Options "SAMEORIGIN";

	# Remove X-Powered-By, which is an information leak
	fastcgi_hide_header X-Powered-By;

	index index.html index.htm index.php index.xhtml;

	error_log /var/log/nginx/servername.com_error.log;
	access_log /var/log/nginx/servername.com_access.log combined;

	# Set max upload size.
	client_max_body_size 20G;
	fastcgi_buffers 64 4K;

	error_page 403 /core/templates/403.php;
	error_page 404 /core/templates/404.php;

	# Enable gzip but do not remove ETag headers
	gzip on;
	gzip_vary on;
	gzip_comp_level 4;
	gzip_min_length 256;
	gzip_proxied expired no-cache no-store private no_last_modified no_etag auth;
	gzip_types application/atom+xml application/javascript application/json application/ld+json application/manifest+json application/rss+xml application/vnd.geo+json application/vnd.ms-fontobject application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml application/xml font/opentype image/bmp image/svg+xml image/x-icon text/cache-manifest text/css text/plain text/vcard text/vnd.rim.location.xloc text/vtt text/x-component text/x-cross-domain-policy;

	# location ~ /\. {
	# 	deny all;
	# }

	location = /favicon.ico {
		log_not_found off;
		access_log off;
		expires max;
		add_header Cache-Control "public, must-revalidate, proxy-revalidate";
	}

	location = /robots.txt {
		allow all;
		log_not_found off;
		access_log off;
	}

	# Uncomment if your server is build with the ngx_pagespeed module
	# This module is currently not supported.
	# pagespeed off;

	# The following 2 rules are only needed for the user_webfinger app.
	# Uncomment it if you're planning to use this app.
	#rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
	#rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json last;

	location = /.well-known/carddav {
		return 301 $scheme://$host/remote.php/dav;
	}
	location = /.well-known/caldav {
		return 301 $scheme://$host/remote.php/dav;
	}

	location / {
		rewrite ^ /index.php;
	}

	location ~ ^\/(?:build|tests|config|lib|3rdparty|templates|data)\/ {
		deny all;
	}
	location ~ ^\/(?:\.|autotest|occ|issue|indie|db_|console) {
		deny all;
	}

	location ~ ^\/(?:index|remote|public|cron|core\/ajax\/update|status|ocs\/v[12]|updater\/.+|oc[ms]-provider\/.+)\.php(?:$|\/) {
		fastcgi_split_path_info ^(.+?\.php)(\/.*|)$;
		try_files $fastcgi_script_name =404;
		include fastcgi_params;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_param PATH_INFO $fastcgi_path_info;
		fastcgi_param HTTPS $fastcgi_https;
		# Avoid sending the security headers twice
		fastcgi_param modHeadersAvailable true;
		fastcgi_param front_controller_active true;
		fastcgi_pass php-handler;
		fastcgi_intercept_errors on;
		fastcgi_request_buffering off;
		fastcgi_buffers 64 64K;
		fastcgi_buffer_size 256k;
		fastcgi_read_timeout 3600;
	}

	location ~ ^\/(?:updater|oc[ms]-provider)(?:$|\/) {
		try_files $uri/ =404;
		index index.php;
	}

	# Adding the cache control header for js and css files
	# Make sure it is BELOW the PHP block
	location ~ \.(?:css|js|woff2?|svg|gif)$ {
		try_files $uri /index.php$request_uri;
		add_header Cache-Control "public, max-age=15778463";

		# Add headers to serve security related headers
		# (It is intended to have these duplicated to the ones above)
		#
		# Before enabling Strict-Transport-Security headers please read into this topic first.
		#
		# WARNING: Only use the "preload option once you read about the consequences
		# in https://hstspreload.org/. This option will add the domain to a hardcoded
		# list that is shipped in all major browsers and getting removed from this
		# list could take several months.
		# add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
		# add_header Strict-Transport-Security "max-age=15552000; includeSubdomains;";
		add_header X-Frame-Options "SAMEORIGIN";
		add_header X-Content-Type-Options nosniff;
		add_header X-XSS-Protection "1; mode=block";
		add_header X-Robots-Tag none;
		add_header X-Download-Options noopen;
		add_header X-Permitted-Cross-Domain-Policies none;
		add_header Referrer-Policy no-referrer;

		# Optional: Don't log access to assets
		access_log off;
	}

	location ~ \.(?:png|html|ttf|ico|jpg|jpeg)$ {
		try_files $uri /index.php$request_uri;
		# Optional: Don't log access to other assets
		access_log off;
	}

	# If youâ€™re seeing meaningless messages in your logfile,
	# for example client denied by server configuration: /var/www/data/htaccesstest.txt,
	# add this section to your nginx configuration to suppress them:
	# location = /data/htaccesstest.txt {
	#   allow all;
	#   log_not_found off;
	#   access_log off;
	# }
}
