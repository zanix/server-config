server {
	listen 80;
	# listen 443 ssl http2;
	# listen [::]:443 ssl http2;

  server_name servername.com;

	# Force www->none redirect.
	# if ($http_host ~* "^(.+)\.servername\.com$") {
	# 	rewrite ^ $scheme://servername.com$request_uri? permanent;
	# }
	# Force redirect to SSL.
	# if ($scheme != "https") {
	# 	rewrite ^ https://$http_host$request_uri? permanent;
	# }

	# include ssl_params.conf;

	# ssl_certificate /etc/letsencrypt/live/servername.com/fullchain.pem;
	# ssl_certificate_key /etc/letsencrypt/live/servername.com/privkey.pem;

  # add_header Strict-Transport-Security "max-age=15552000; includeSubdomains";
  add_header X-Content-Type-Options nosniff;
  add_header X-XSS-Protection "1; mode=block";
  add_header X-Robots-Tag none;
	add_header X-Download-Options noopen;
	add_header X-Permitted-Cross-Domain-Policies none;
	add_header Referrer-Policy no-referrer;
	add_header X-Frame-Options "SAMEORIGIN";

	error_log /var/log/nginx/servername.com_error.log;
	access_log /var/log/nginx/servername.com_access.log combined;

  location ~ /\. {
    deny all;
  }
  location / {
		# auth_basic "Restricted Content";
		# auth_basic_user_file /var/www/.htpasswd;
		# add_header Content-Security-Policy "default-src * 'self' 'unsafe-inline' 'unsafe-eval' data:;";

    proxy_pass http://127.0.0.1:8888;
    include proxy_params;
  }
}
